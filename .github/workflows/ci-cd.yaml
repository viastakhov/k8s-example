name:  CI-CD
run-name: ${{ github.actor }} is running out GitHub Actions üöÄ
on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/README.md'
      - '**/.gitignore'
      - '**/LICENSE'
      - 'ansible/**'
      - 'kubernetes-manifests/**'
      
jobs:
  build:
    if: ${{ true }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      digest: ${{ steps.checkout.outputs.digest }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - id: checkout
        run: echo "digest={{sha}}" >> $GITHUB_OUTPUT

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/viastakhov/loadgenerator
          tags: |
            type=semver,pattern={{version}}
            type=sha,prefix=,suffix=,format=short
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value={{digest}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push an image
        uses: docker/build-push-action@v4
        with:
          context: "{{defaultContext}}:src/loadgenerator"
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          
  deploy:
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./helm  
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
        
      - name: Helm Installation
        uses: azure/setup-helm@v1.1
        with:
          version: v3.7.0
          
      - name: Render templates
        run: |
          helm template . --set image.tag=${{ needs.build.outputs.digest }}


#      - name: List files in the repository
#        run: |
#          ls -la ${{ github.workspace }}
#      - run: echo "üçè This job's status is ${{ job.status }}."
#      - uses: actions-hub/kubectl@master
#        env:
#          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
#        with:
#          args: get pods

